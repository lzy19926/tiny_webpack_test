export declare const ET: {
    readonly HOST_COMPONENT: "lzyDomElement";
    readonly HOST_TEXT: "lzyTextElement";
    readonly CONTEXT__PROVIDER: "lzyContextProviderElement";
    readonly FUNCTION_COMPONENT: "lzyFuncionElement";
    readonly MEMO_TYPE: "lzyMemoComponent";
    readonly FORWARD_REF_TYPE: "lzyForwardRefComponent";
    readonly UNKNOWN_TYPE: "UnknownType";
};
type ValueOf<T> = T[keyof T];
export type ElementType = ValueOf<typeof ET>;
export declare function isElement(node: any): boolean;
export declare function isFunctionEle(ele: any): boolean;
export declare function isDomEle(ele: any): boolean;
export declare function isTextEle(ele: any): boolean;
export declare function isContextProviderEle(ele: any): boolean;
export declare function isForwardRefEle(ele: any): boolean;
export declare function getElementType(ele: any): string;
export declare function getComponentType(component: any): "lzyDomElement" | "lzyTextElement" | "lzyContextProviderElement" | "lzyFuncionElement" | "lzyForwardRefComponent" | "unknowEleType";
export {};
