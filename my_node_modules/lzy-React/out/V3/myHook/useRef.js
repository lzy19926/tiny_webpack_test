"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.myUseRef = void 0;
// useRef:创建ref容器 将dom节点装入容器
// useRef使用分为两部分
//1. 在render阶段为带有ref属性的fiber添加refTag (hasRef)
// - 在beginWork中进行标记
//2. commit阶段为包含refTag的fiber执行对应操作 
// 在commit-mutation中 检查ref属性是否改变,需要先移除之前的ref
//todo ------------ 问题------------
// 在使用路由时  renderRouter方法  会先将effectlist清空，
// 导致之前的ref相关的effect消失,而layout会在整个切片执行完毕后执行,
// 此时渲染路由页面之前的effect已经消失
// 经测试  class会根据setState进行变更
//! 创建一个useRef------------------------
function myUseRef() {
    const refObject = { current: null };
    return refObject;
}
exports.myUseRef = myUseRef;
