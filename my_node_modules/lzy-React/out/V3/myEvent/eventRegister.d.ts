import type { DOMEventName } from './domEventsName';
import { EventPriority } from './EventPriority';
type ContainerElement = Document | Element | DocumentFragment;
type EventListener = (e: Event) => any;
export type AnyNativeEvent = Event | KeyboardEvent | MouseEvent | TouchEvent;
export declare const topLevelEventsToReactNames: Map<DOMEventName, string | null>;
export declare function listenToAllSupportedEvents(rootContainerElement: ContainerElement): void;
export declare function removeEventListener(target: EventTarget, eventType: string, listener: EventListener, capture: boolean): void;
export declare function addEventBubbleListener(target: EventTarget, eventType: string, listener: EventListener): Function;
export declare function addEventCaptureListener(target: EventTarget, eventType: string, listener: EventListener): Function;
export declare function getEventPriority(domEventName: DOMEventName): EventPriority;
export {};
