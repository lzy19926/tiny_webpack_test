import { NewFiberNode } from '../myReactCore/GlobalFiber';
import { FiberNode } from "../myReactCore/Interface";
declare function createFiberTree(source: any, resources: any, parentNode: FiberNode): NewFiberNode;
declare function renderFunctionComponent(fiber: FiberNode): void;
declare function createDomElement(fiber: FiberNode): any;
declare function preHandleFiberNode(source: any, resources: any, workInProgressFiber: FiberNode): {
    children: any;
    tag: any;
};
declare function handleFunctionFiberNode(fiber: FiberNode, ComponentName: string): void;
declare function conbineVnodAndFiber(fiber: FiberNode, vnode: any, resources: any): void;
declare function getParentDom(fiber: FiberNode): Function | HTMLElement;
declare function handleFunctionComponentProps(fiber: any, functionComponent: any): any;
declare function handleProps(curFiber: any, dom: any): void;
declare function useRoute(fiber: FiberNode): void;
export { createFiberTree, renderFunctionComponent, useRoute, handleProps, handleFunctionComponentProps, createDomElement, getParentDom, conbineVnodAndFiber, preHandleFiberNode, handleFunctionFiberNode };
