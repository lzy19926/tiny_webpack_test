import { kindOf } from '../utils/kindOf'

// element类型
export const ET = {
  HOST_COMPONENT: 'lzyDomElement',
  HOST_TEXT: 'lzyTextElement',
  CONTEXT__PROVIDER: 'lzyContextProviderElement',
  FUNCTION_COMPONENT: 'lzyFuncionElement',
  // 额外包装类型 需要特殊处理
  MEMO_TYPE: 'lzyMemoComponent',
  FORWARD_REF_TYPE: 'lzyForwardRefComponent',
  UNKNOWN_TYPE: "UnknownType",
} as const

type ValueOf<T> = T[keyof T];
export type ElementType = ValueOf<typeof ET>



//todo ----------判断Element类型的方法------------------
export function isElement(node: any) {
  return isFunctionEle(node)
    || isDomEle(node)
    || isTextEle(node)
    || isContextProviderEle(node)
    || isForwardRefEle(node)
}
export function isFunctionEle(ele: any): boolean {
  const t = ele.$$typeof
  return kindOf(t) === 'symbol' &&
    Symbol.keyFor(t) === ET.FUNCTION_COMPONENT
}
export function isDomEle(ele: any): boolean {
  const t = ele.$$typeof
  return kindOf(t) === 'symbol' &&
    Symbol.keyFor(t) === ET.HOST_COMPONENT
}
export function isTextEle(ele: any): boolean {
  const t = ele.$$typeof
  return kindOf(t) === 'symbol' &&
    Symbol.keyFor(t) === ET.HOST_TEXT
}
export function isContextProviderEle(ele: any): boolean {
  const t = ele.$$typeof
  return kindOf(t) === 'symbol' &&
    Symbol.keyFor(t) === ET.CONTEXT__PROVIDER
}
export function isForwardRefEle(ele: any): boolean {
  const t = ele.$$typeof
  return kindOf(t) === 'symbol' &&
    Symbol.keyFor(t) === ET.FORWARD_REF_TYPE
}
export function getElementType(ele: any): string {
  const t = ele.$$typeof
  return kindOf(t) === 'symbol' ? "UnknownType" : Symbol.keyFor(t)
}

//todo ------------ 判断createElement传入的节点类型方法---------------------
// Text类型节点只会在children中出现,不会在createElement中出现.进行特殊处理
export function getComponentType(component: any) {

  if (typeof component === 'function') return ET.FUNCTION_COMPONENT

  if (typeof component === 'object' && isTextEle(component)) return ET.HOST_TEXT

  if (typeof component === 'object' && isContextProviderEle(component)) return ET.CONTEXT__PROVIDER

  if (typeof component === 'object' && isForwardRefEle(component)) return ET.FORWARD_REF_TYPE

  if (typeof component === 'string') return ET.HOST_COMPONENT

  return 'unknowEleType'
}
