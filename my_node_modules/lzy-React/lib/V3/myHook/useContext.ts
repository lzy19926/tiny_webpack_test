type ReactContextProvider = {
    $$typeof: symbol,
    _context: ReactContext
}

type ReactContext = {
    $$typeof: symbol,
    _currentValue: any,
    _threadCount: number,
    Provider: ReactContextProvider
}

//! 总结:useContext直接返回当前dispatcher中的context对象
// 返回current
export function myUseContext(Context: ReactContext) {
    return Context._currentValue
}


export function createContext(defaultValue: any): ReactContext {
    //todo 创建context对象
    const context: ReactContext = {
        $$typeof: Symbol.for('lzyContextProviderElement'),
        _currentValue: defaultValue,
        _threadCount: 0,
        Provider: null,
    };

    //todo 创建Provider对象(vdom)(函数式组件使用)
    context.Provider = {
        $$typeof: Symbol.for('lzyContextProviderElement'),
        _context: context
    }

    return context;
}