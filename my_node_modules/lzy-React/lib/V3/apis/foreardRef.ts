
//这个API只做了一件事,将组件函数包装为FORWARD_REF_TYPE,后续按照forwardRef处理
import { ElementNode } from '../myReactCore/Interface'
import { MEMO_TYPE, FORWARD_REF_TYPE } from '../myJSX/elementType'

export function forwardRef(render: (props: any, ref: any) => ElementNode) {
  if (typeof render !== 'function') {
    console.error('forwardRef 需要接收一个函数组件');
  }
  if (render.length !== 2) {
    console.error('forwardRef 内的函数组件需要传递两个参数 props,ref');
  }
  //@ts-ignore
  if (render.$$typeof === MEMO_TYPE) {
    console.error(`
    forwardRef 无法处理Memo函数,
    请使用memo(forwardRef(...))代替forwardRef(memo(...))
    `);
  }


  const newElementType = {
    $$typeof: FORWARD_REF_TYPE,
    render
  }

  return newElementType;
}