import type { FiberNode } from './Interface'


// -------------------HTMLDomType----------------------
export const ELEMENT_NODE = 1;
export const TEXT_NODE = 3;
export const COMMENT_NODE = 8;
export const DOCUMENT_NODE = 9;
export const DOCUMENT_TYPE_NODE = 10;
export const DOCUMENT_FRAGMENT_NODE = 11;



// 保存在Dom节点上的内部react属性
export const InternalPropsKey = '__lzyReactProps$';
export const InternalInstanceKey = '__lzyreactFiber$';

// todo -----------------修改Dom节点内部添加属性的方法------------------------
// 保存/更新props到Dom节点实例中 (Dom节点,Text节点,Suspence节点)
// 创建节点   和  commit中处理完props后  进行更新
export function updateFiberPropsToDom(dom: Element, props: Object) {
    dom[InternalPropsKey] = props
}

// 从节点实例中获取当前的props (比如dom节点当前的click事件)
export function getFiberCurrentPropsFromDom(dom: Element): Object {
    return dom[InternalPropsKey] || {}
}

// 给dom添加内部属性,挂载对应fiber
// 在CreateInstance时执行
export function patchFiberNodeToDom(hostFiber: FiberNode, dom: Element): void {
    dom[InternalInstanceKey] = hostFiber;
}

// 通过Dom获取最近的fiber(获取dom对应Fiber)
export function getFiberNodeFromDom(dom: EventTarget): null | FiberNode {
    return dom[InternalInstanceKey] || null
}
