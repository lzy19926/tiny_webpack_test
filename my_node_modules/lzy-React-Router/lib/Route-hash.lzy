import LzyReact, { renderRoute } from '../../lzy-React/out/index_V3'

// 渲染逻辑
export function changeView() {

    if (!window.$$routerMap) return console.warn('请创建对应的路由容器RouteContainer')
    // 寻找注册的组件
    const path = '/' + location.hash
    const routeObj = window.$$routerMap[path]
    if (!routeObj) return console.warn(`路由${path}未注册`)

    // 渲染组件到对应的container上
    const component = routeObj.component
    const containerFiber = routeObj.containerFiber._child
    renderRoute(component, containerFiber)
}

// 路由容器/注册器
export function Routes(_, children, fiber) {

    // 批量注册Route
    children.forEach((child) => {
        if (child.tag === 'Route') {
            const { path, component } = child.props
            if (!window.$$routerMap[path]) {
                window.$$routerMap[path] = {
                    containerFiber: fiber,
                    component: component
                }
            }
        }
    })

    return <div>{children}</div>
}

// 路由节点
export function Route() {
    return <span></span>
}

// Link组件
export function Link(props) {

    const { to, title, style } = props
    return (<a href={to} style={style}>{title}</a>)
}

// 路由启动器
export function HashRouter(props, children, fiber) {

    // 创建并挂载容器到全局
    if (!window.$$routerMap) {
        window.$$routerMap = {}
    }

    // 注册window路由事件
    window.addEventListener('DOMContentLoaded', changeView)
    window.addEventListener('hashchange', changeView)

    return <div id='hashRoute'>{children}</div>
}