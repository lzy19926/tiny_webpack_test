import LzyReact from 'lzy-react'
import { CodeBlock, Block } from 'lzy-ui'



export default function Start() {


    const code1 =
        `    npm i lzy-react-cli  -g    //全局安装脚手架
    lzy-react -v               // 查看版本号`;
    const code2 =
        `    lzy-react create <projectName> // 对应目录下创建项目
    npm install                    // 项目中安装依赖包`

    const code3 =
        `   npm run t-build              // 打包
   npm run t-dev                // 运行`;

    const code4 =
        `  lzy-webpack      //手写的打包器(集成了devServer功能)
  lzy-watchpack    //devServer的文件监视系统
  lzy-React        //lzy-react核心库
  lzy-React-Router // 适配的路由(仅实现history模式 非常不完善)
  lzy-Ruzy         // 适配的全局状态管理器`


    return (
        <LZY-TEMPLATE>
            <h2>脚手架安装</h2>
            <CodeBlock codeStr={code1} lang="JSX" />
            <Block />

            <h2>使用脚手架生成项目</h2>
            <CodeBlock codeStr={code2} lang="JSX" />
            <Block />

            <h2>构建与打包</h2>
            <div>项目使用手写的lzy-webpack进行构建和打包,同时提供了dev-Server功能</div>
            <div>(注意此功能暂时不完善,仅能在文件发生修改时自动打包,在添加,引入新文件后无法自动构建,此时需要重新运行t-dev命令)</div>
            <CodeBlock codeStr={code3} lang="JSX" />
            <Block />

            <h2>依赖文件说明</h2>
            <div>本人手写的相关工具库存放在根目录下的my_mode_modules里,暂时没有发布npm包,用于及时进行修复</div>
            <div>请大家引用的时候注意  其他的npm包可以正常安装和引用(大概把,可能有坑)</div>
            <Block />

            <h2>提供相关工具</h2>
            <CodeBlock codeStr={code4} lang="JSX" />
        </LZY-TEMPLATE>
    )
}