import LzyReact, { myUseState, myUseEffect } from 'lzy-react'
import BaseLayout from '../BaseLayout/BaseLayout.lzy'
import './Demo.css'

function Parent(props, children) {
    return (<div>{children}</div>)
}


//! Demo组件
export default function Demo(props) {

    console.log('获取到的props', props);

    const [age, setAge] = myUseState(18)
    const [num, setNum] = myUseState(0)
    const [arr, setArr] = myUseState([1, 2, 3])

    const longList = new Array(5000).fill(1)

    //! 支持useEffect全系使用(return函数 同样会发生死循环)
    myUseEffect(() => {
        console.log('传入[],仅仅mount时执行');
    }, [])

    myUseEffect(() => {
        console.log('不传 任意时候执行');
    })

    myUseEffect(() => {
        setNum(num + 1)
        console.log('监听age,age改变时执行');
    }, [age])



    //!定义onclick方法
    function addNum() {
        setNum(num + 1) //setArr并不是异步的  而是在App执行完毕之后才会进行更新
    }
    function addAge() {
        setAge(age + 1)
    }
    function addArr() {
        setArr([...arr, 'item'])
    }
    function minArr() {
        setArr(arr.splice(1))
    }


    return (
        <BaseLayout>
            <h1> Demo</h1>
            <div class="alert alert-success" role="alert">
                简单适配了bootStarp组件库
            </div>

            <div class="alert alert-info" role="alert">
                提供setState和useEffect钩子功能
            </div>
            <button type="button" class="btn btn-primary" onClick={addNum}>增加Num</button>
            <button type="button" class="btn btn-secondary" onClick={addAge}>增加Age和Num</button>

            <h3 className="blue">当前Num:{num}</h3>
            <h3 className='blue'>当前Age:{age}</h3>



            <div class="alert alert-success" role="alert">
                提供了组件children功能
            </div>
            <Parent>
                <div>Parent双标签内的子组件</div>
            </Parent>

            <div class="alert alert-primary" role="alert">
                <p> 提供array.map列表渲染功能</p>
                <button type="button" class="btn btn-success" onClick={addArr}>增加Arr</button>
                <button type="button" class="btn btn-warning" onClick={minArr}>减少Arr</button>
            </div>
            {
                arr.map((i, index) => <div key={index}>{i}</div>)
            }

        </BaseLayout>
    )
}




